{"ast":null,"code":"import _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nexport var Settlement = _createClass(function Settlement(name) {\n  _classCallCheck(this, Settlement);\n  this.name = name;\n});\nexport var Village = function (_Settlement) {\n  _inherits(Village, _Settlement);\n  var _super = _createSuper(Village);\n  function Village(name, numberOfHouses, residentsPerHouse, villageArea) {\n    var _this;\n    _classCallCheck(this, Village);\n    _this = _super.call(this, name);\n    _this.numberOfHouses = numberOfHouses;\n    _this.residentsPerHouse = residentsPerHouse;\n    _this.villageArea = villageArea;\n    return _this;\n  }\n  _createClass(Village, [{\n    key: \"calculatePopulationDensity\",\n    value: function calculatePopulationDensity() {\n      return this.numberOfHouses > 0 ? this.numberOfHouses * this.residentsPerHouse / this.villageArea : 0;\n    }\n  }]);\n  return Village;\n}(Settlement);\nexport var City = function (_Settlement2) {\n  _inherits(City, _Settlement2);\n  var _super2 = _createSuper(City);\n  function City(name, population, cityArea) {\n    var _this2;\n    _classCallCheck(this, City);\n    _this2 = _super2.call(this, name);\n    _this2.population = population;\n    _this2.cityArea = cityArea;\n    return _this2;\n  }\n  _createClass(City, [{\n    key: \"calculatePopulationDensity\",\n    value: function calculatePopulationDensity() {\n      return this.cityArea > 0 ? this.population / this.cityArea : 0;\n    }\n  }]);\n  return City;\n}(Settlement);","map":{"version":3,"names":["Settlement","_createClass","name","_classCallCheck","Village","_Settlement","_inherits","_super","_createSuper","numberOfHouses","residentsPerHouse","villageArea","_this","call","key","value","calculatePopulationDensity","City","_Settlement2","_super2","population","cityArea","_this2"],"sources":["/Users/pashashilo/Desktop/prezident/classes/lab4-5/index.ts"],"sourcesContent":["export abstract class Settlement {\n    public name: string;\n\n    constructor(name: string) {\n        this.name = name;\n    }\n}\n\nexport class Village extends Settlement {\n    public numberOfHouses: number;\n    public residentsPerHouse: number;\n    public villageArea: number;\n\n    constructor(\n        name: string,\n        numberOfHouses: number,\n        residentsPerHouse: number,\n        villageArea: number\n    ) {\n        super(name);\n        this.numberOfHouses = numberOfHouses;\n        this.residentsPerHouse = residentsPerHouse;\n        this.villageArea = villageArea;\n    }\n\n    public calculatePopulationDensity(): number {\n        return this.numberOfHouses > 0\n            ? (this.numberOfHouses * this.residentsPerHouse) / this.villageArea\n            : 0;\n    }\n}\n\nexport class City extends Settlement {\n    public population: number;\n    public cityArea: number;\n\n    constructor(name: string, population: number, cityArea: number) {\n        super(name);\n        this.population = population;\n        this.cityArea = cityArea;\n    }\n\n    public calculatePopulationDensity(): number {\n        return this.cityArea > 0 ? this.population / this.cityArea : 0;\n    }\n}\n"],"mappings":";;;;;;;AAAA,WAAsBA,UAAU,GAAAC,YAAA,CAG5B,SAAAD,WAAYE,IAAY,EAAE;EAAAC,eAAA,OAAAH,UAAA;EACtB,IAAI,CAACE,IAAI,GAAGA,IAAI;AACpB,CAAC;AAGL,WAAaE,OAAO,aAAAC,WAAA;EAAAC,SAAA,CAAAF,OAAA,EAAAC,WAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,OAAA;EAKhB,SAAAA,QACIF,IAAY,EACZO,cAAsB,EACtBC,iBAAyB,EACzBC,WAAmB,EACrB;IAAA,IAAAC,KAAA;IAAAT,eAAA,OAAAC,OAAA;IACEQ,KAAA,GAAAL,MAAA,CAAAM,IAAA,OAAMX,IAAI;IACVU,KAAA,CAAKH,cAAc,GAAGA,cAAc;IACpCG,KAAA,CAAKF,iBAAiB,GAAGA,iBAAiB;IAC1CE,KAAA,CAAKD,WAAW,GAAGA,WAAW;IAAC,OAAAC,KAAA;EACnC;EAACX,YAAA,CAAAG,OAAA;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAC,2BAAA,EAA4C;MACxC,OAAO,IAAI,CAACP,cAAc,GAAG,CAAC,GACvB,IAAI,CAACA,cAAc,GAAG,IAAI,CAACC,iBAAiB,GAAI,IAAI,CAACC,WAAW,GACjE,CAAC;IACX;EAAC;EAAA,OAAAP,OAAA;AAAA,EArBwBJ,UAAU;AAwBvC,WAAaiB,IAAI,aAAAC,YAAA;EAAAZ,SAAA,CAAAW,IAAA,EAAAC,YAAA;EAAA,IAAAC,OAAA,GAAAX,YAAA,CAAAS,IAAA;EAIb,SAAAA,KAAYf,IAAY,EAAEkB,UAAkB,EAAEC,QAAgB,EAAE;IAAA,IAAAC,MAAA;IAAAnB,eAAA,OAAAc,IAAA;IAC5DK,MAAA,GAAAH,OAAA,CAAAN,IAAA,OAAMX,IAAI;IACVoB,MAAA,CAAKF,UAAU,GAAGA,UAAU;IAC5BE,MAAA,CAAKD,QAAQ,GAAGA,QAAQ;IAAC,OAAAC,MAAA;EAC7B;EAACrB,YAAA,CAAAgB,IAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAC,2BAAA,EAA4C;MACxC,OAAO,IAAI,CAACK,QAAQ,GAAG,CAAC,GAAG,IAAI,CAACD,UAAU,GAAG,IAAI,CAACC,QAAQ,GAAG,CAAC;IAClE;EAAC;EAAA,OAAAJ,IAAA;AAAA,EAZqBjB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}