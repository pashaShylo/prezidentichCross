{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Task1 = function Task1() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    firstInput = _useState2[0],\n    setFirstInput = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    secondInput = _useState4[0],\n    setSecondInput = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    thirdInput = _useState6[0],\n    setThirdInput = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    res = _useState8[0],\n    setRes = _useState8[1];\n  var calculate = function calculate() {\n    if (firstInput > 0 || secondInput > 0 || thirdInput > 0) {\n      setRes(Math.pow(firstInput + secondInput + thirdInput, 2));\n    } else {\n      setRes(Math.pow(firstInput, 2) + Math.pow(secondInput, 2) + Math.pow(thirdInput, 2));\n    }\n  };\n  return _jsxs(ScrollView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#C2EABD\"\n    },\n    children: [_jsx(Text, {\n      style: _objectSpread(_objectSpread({}, styles.text), {}, {\n        color: \"black\",\n        textAlign: \"center\"\n      }),\n      children: \"\\u0417\\u0430\\u0434\\u0430\\u043D\\u043E \\u0442\\u0440\\u0438 \\u0447\\u0438\\u0441\\u043B\\u0430. \\u042F\\u043A\\u0449\\u043E \\u0445\\u043E\\u0447 \\u043E\\u0434\\u043D\\u0435 \\u0437 \\u043D\\u0438\\u0445 \\u0434\\u043E\\u0434\\u0430\\u0442\\u043D\\u0435, \\u0442\\u043E \\u0437\\u043D\\u0430\\u0439\\u0442\\u0438 \\u043A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442 \\u0441\\u0443\\u043C\\u0438. \\u0412 \\u0456\\u043D\\u0448\\u043E\\u043C\\u0443 \\u0432\\u0438\\u043F\\u0430\\u0434\\u043A\\u0443 \\u2013 \\u0441\\u0443\\u043C\\u0443 \\u043A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\\u0456\\u0432.\"\n    }), _jsx(TextInput, {\n      style: {\n        backgroundColor: \"white\",\n        margin: 15,\n        fontSize: 20,\n        padding: 10,\n        borderWidth: 3,\n        borderColor: \"blue\",\n        borderRadius: 15\n      },\n      placeholder: \"Input number\",\n      onChangeText: function onChangeText(text) {\n        return setFirstInput(isNaN(parseInt(text)) ? 0 : parseInt(text));\n      }\n    }), _jsx(TextInput, {\n      style: {\n        backgroundColor: \"white\",\n        margin: 15,\n        fontSize: 20,\n        padding: 10,\n        borderWidth: 3,\n        borderColor: \"blue\",\n        borderRadius: 15\n      },\n      placeholder: \"Input number\",\n      onChangeText: function onChangeText(text) {\n        return setSecondInput(isNaN(parseInt(text)) ? 0 : parseInt(text));\n      }\n    }), _jsx(TextInput, {\n      style: {\n        backgroundColor: \"white\",\n        margin: 15,\n        fontSize: 20,\n        padding: 10,\n        borderWidth: 3,\n        borderColor: \"blue\",\n        borderRadius: 15\n      },\n      placeholder: \"Input number\",\n      onChangeText: function onChangeText(text) {\n        return setThirdInput(isNaN(parseInt(text)) ? 0 : parseInt(text));\n      }\n    }), _jsx(Pressable, {\n      style: function style(_ref) {\n        var pressed = _ref.pressed;\n        return [{\n          backgroundColor: pressed ? \"#F15A59\" : \"#D21312\"\n        }, styles.button];\n      },\n      onPress: calculate,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Calculate\"\n      })\n    }), _jsx(Text, {\n      style: styles.res,\n      children: res ? \"Result =\" + res : null\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 16,\n    elevation: 3,\n    width: 160\n  },\n  text: {\n    fontSize: 20,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\"\n  },\n  res: {\n    alignSelf: \"center\",\n    fontSize: 20,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"black\",\n    marginTop: 20\n  }\n});\nexport default Task1;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Task1","_useState","_useState2","_slicedToArray","firstInput","setFirstInput","_useState3","_useState4","secondInput","setSecondInput","_useState5","_useState6","thirdInput","setThirdInput","_useState7","_useState8","res","setRes","calculate","Math","pow","ScrollView","style","flex","backgroundColor","children","Text","_objectSpread","styles","text","color","textAlign","TextInput","margin","fontSize","padding","borderWidth","borderColor","borderRadius","placeholder","onChangeText","isNaN","parseInt","Pressable","_ref","pressed","button","onPress","StyleSheet","create","alignItems","alignSelf","paddingVertical","paddingHorizontal","elevation","width","lineHeight","fontWeight","letterSpacing","marginTop"],"sources":["/Users/pashashilo/Desktop/prezident/labs/lab1/Task1.tsx"],"sourcesContent":["import {\n    StyleSheet,\n    Text,\n    View,\n    TextInput,\n    ScrollView,\n    Pressable,\n} from \"react-native\";\nimport React, { useState } from \"react\";\n\nconst Task1 = () => {\n    const [firstInput, setFirstInput] = useState<any>();\n    const [secondInput, setSecondInput] = useState<any>();\n    const [thirdInput, setThirdInput] = useState<any>();\n    const [res, setRes] = useState<any>(null);\n\n    const calculate = () => {\n        if (firstInput > 0 || secondInput > 0 || thirdInput > 0) {\n            setRes(Math.pow(firstInput + secondInput + thirdInput, 2));\n        } else {\n            setRes(\n                Math.pow(firstInput, 2) +\n                    Math.pow(secondInput, 2) +\n                    Math.pow(thirdInput, 2)\n            );\n        }\n    };\n    return (\n        <ScrollView\n            style={{\n                flex: 1,\n                backgroundColor: \"#C2EABD\",\n            }}\n        >\n            <Text\n                style={{ ...styles.text, color: \"black\", textAlign: \"center\" }}\n            >\n                Задано три числа. Якщо хоч одне з них додатне, то знайти квадрат\n                суми. В іншому випадку – суму квадратів.\n            </Text>\n            <TextInput\n                style={{\n                    backgroundColor: \"white\",\n                    margin: 15,\n                    fontSize: 20,\n                    padding: 10,\n                    borderWidth: 3,\n                    borderColor: \"blue\",\n                    borderRadius: 15,\n                }}\n                placeholder=\"Input number\"\n                onChangeText={(text) =>\n                    setFirstInput(isNaN(parseInt(text)) ? 0 : parseInt(text))\n                }\n            />\n            <TextInput\n                style={{\n                    backgroundColor: \"white\",\n                    margin: 15,\n                    fontSize: 20,\n                    padding: 10,\n                    borderWidth: 3,\n                    borderColor: \"blue\",\n                    borderRadius: 15,\n                }}\n                placeholder=\"Input number\"\n                onChangeText={(text) =>\n                    setSecondInput(isNaN(parseInt(text)) ? 0 : parseInt(text))\n                }\n            />\n            <TextInput\n                style={{\n                    backgroundColor: \"white\",\n                    margin: 15,\n                    fontSize: 20,\n                    padding: 10,\n                    borderWidth: 3,\n                    borderColor: \"blue\",\n                    borderRadius: 15,\n                }}\n                placeholder=\"Input number\"\n                onChangeText={(text) =>\n                    setThirdInput(isNaN(parseInt(text)) ? 0 : parseInt(text))\n                }\n            />\n            <Pressable\n                style={({ pressed }) => [\n                    { backgroundColor: pressed ? \"#F15A59\" : \"#D21312\" },\n                    styles.button,\n                ]}\n                onPress={calculate}\n            >\n                <Text style={styles.text}>Calculate</Text>\n            </Pressable>\n            <Text style={styles.res}>{res ? \"Result =\" + res : null}</Text>\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    button: {\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 16,\n        elevation: 3,\n        width: 160,\n    },\n    text: {\n        fontSize: 20,\n        lineHeight: 21,\n        fontWeight: \"bold\",\n        letterSpacing: 0.25,\n        color: \"white\",\n    },\n    res: {\n        alignSelf: \"center\",\n        fontSize: 20,\n        lineHeight: 21,\n        fontWeight: \"bold\",\n        letterSpacing: 0.25,\n        color: \"black\",\n        marginTop: 20,\n    },\n});\n\nexport default Task1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}