{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Task2 = function Task2() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    firstInput = _useState2[0],\n    setFirstInput = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    secondInput = _useState4[0],\n    setSecondInput = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    res = _useState6[0],\n    setRes = _useState6[1];\n  var calculate = function calculate() {\n    var arr = _.range(firstInput, secondInput + 1);\n    setRes(arr.reduce(function (sum, elem) {\n      if (elem % 29 === 0) {\n        return sum + 1;\n      }\n      if (elem % 2 === 0) {\n        return sum + 1;\n      }\n      if (elem % 5 === 2) {\n        return sum + 1;\n      }\n      return sum;\n    }, 0));\n  };\n  return _jsxs(ScrollView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#C2EABD\"\n    },\n    children: [_jsx(Text, {\n      style: _objectSpread(_objectSpread({}, styles.text), {}, {\n        color: \"black\",\n        textAlign: \"center\"\n      }),\n      children: \"\\u041D\\u0430 \\u0437\\u0430\\u0434\\u0430\\u043D\\u043E\\u043C\\u0443 \\u043F\\u0440\\u043E\\u043C\\u0456\\u0436\\u043A\\u0443 \\u0447\\u0438\\u0441\\u0435\\u043B [a,b] \\u0437\\u043D\\u0430\\u0439\\u0434\\u0456\\u0442\\u044C \\u043A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C \\u0447\\u0438\\u0441\\u0435\\u043B, \\u044F\\u043A\\u0456 \\u043A\\u0440\\u0430\\u0442\\u043D\\u0456 29, \\u043F\\u0430\\u0440\\u043D\\u0456 \\u0456 \\u043F\\u0440\\u0438 \\u0434\\u0456\\u043B\\u0435\\u043D\\u043D\\u0456 \\u043D\\u0430 5 \\u0434\\u0430\\u044E\\u0442\\u044C \\u0432 \\u043E\\u0441\\u0442\\u0430\\u0447\\u0456 2.\"\n    }), _jsx(TextInput, {\n      style: {\n        backgroundColor: \"white\",\n        margin: 15,\n        fontSize: 20,\n        padding: 10,\n        borderWidth: 3,\n        borderColor: \"blue\",\n        borderRadius: 15\n      },\n      placeholder: \"Input number\",\n      onChangeText: function onChangeText(text) {\n        return setFirstInput(parseInt(text));\n      }\n    }), _jsx(TextInput, {\n      style: {\n        backgroundColor: \"white\",\n        margin: 15,\n        fontSize: 20,\n        padding: 10,\n        borderWidth: 3,\n        borderColor: \"blue\",\n        borderRadius: 15\n      },\n      placeholder: \"Input number\",\n      onChangeText: function onChangeText(text) {\n        return setSecondInput(parseInt(text));\n      }\n    }), _jsx(Pressable, {\n      style: function style(_ref) {\n        var pressed = _ref.pressed;\n        return [{\n          backgroundColor: pressed ? \"#F15A59\" : \"#D21312\"\n        }, styles.button];\n      },\n      onPress: calculate,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Click\"\n      })\n    }), _jsx(Text, {\n      style: styles.res,\n      children: res\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    width: 130\n  },\n  text: {\n    fontSize: 20,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\"\n  },\n  res: {\n    alignSelf: \"center\",\n    fontSize: 20,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"black\",\n    marginTop: 20\n  }\n});\nexport default Task2;","map":{"version":3,"names":["React","useState","_","jsx","_jsx","jsxs","_jsxs","Task2","_useState","_useState2","_slicedToArray","firstInput","setFirstInput","_useState3","_useState4","secondInput","setSecondInput","_useState5","_useState6","res","setRes","calculate","arr","range","reduce","sum","elem","ScrollView","style","flex","backgroundColor","children","Text","_objectSpread","styles","text","color","textAlign","TextInput","margin","fontSize","padding","borderWidth","borderColor","borderRadius","placeholder","onChangeText","parseInt","Pressable","_ref","pressed","button","onPress","StyleSheet","create","alignItems","alignSelf","paddingVertical","paddingHorizontal","elevation","width","lineHeight","fontWeight","letterSpacing","marginTop"],"sources":["/Users/pashashilo/Desktop/prezident/labs/lab1/Task2.tsx"],"sourcesContent":["import {\n    StyleSheet,\n    Text,\n    View,\n    TextInput,\n    ScrollView,\n    Pressable,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport _ from \"lodash\";\n\nconst Task2 = () => {\n    const [firstInput, setFirstInput] = useState<any>();\n    const [secondInput, setSecondInput] = useState<any>();\n    const [res, setRes] = useState(null);\n\n    const calculate = () => {\n        const arr = _.range(firstInput, secondInput + 1);\n        setRes(\n            arr.reduce((sum: number, elem: any) => {\n                if (elem % 29 === 0) {\n                    return sum + 1;\n                }\n                if (elem % 2 === 0) {\n                    return sum + 1;\n                }\n                if (elem % 5 === 2) {\n                    return sum + 1;\n                }\n                return sum;\n            }, 0)\n        );\n    };\n\n    return (\n        <ScrollView\n            style={{\n                flex: 1,\n                backgroundColor: \"#C2EABD\",\n            }}\n        >\n            <Text\n                style={{ ...styles.text, color: \"black\", textAlign: \"center\" }}\n            >\n                На заданому проміжку чисел [a,b] знайдіть кількість чисел, які\n                кратні 29, парні і при діленні на 5 дають в остачі 2.\n            </Text>\n            <TextInput\n                style={{\n                    backgroundColor: \"white\",\n                    margin: 15,\n                    fontSize: 20,\n                    padding: 10,\n                    borderWidth: 3,\n                    borderColor: \"blue\",\n                    borderRadius: 15,\n                }}\n                placeholder=\"Input number\"\n                onChangeText={(text) => setFirstInput(parseInt(text))}\n            />\n            <TextInput\n                style={{\n                    backgroundColor: \"white\",\n                    margin: 15,\n                    fontSize: 20,\n                    padding: 10,\n                    borderWidth: 3,\n                    borderColor: \"blue\",\n                    borderRadius: 15,\n                }}\n                placeholder=\"Input number\"\n                onChangeText={(text) => setSecondInput(parseInt(text))}\n            />\n            <Pressable\n                style={({ pressed }) => [\n                    {\n                        backgroundColor: pressed ? \"#F15A59\" : \"#D21312\",\n                    },\n                    styles.button,\n                ]}\n                onPress={calculate}\n            >\n                <Text style={styles.text}>Click</Text>\n            </Pressable>\n            <Text style={styles.res}>{res}</Text>\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    button: {\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 4,\n        elevation: 3,\n        width: 130,\n    },\n    text: {\n        fontSize: 20,\n        lineHeight: 21,\n        fontWeight: \"bold\",\n        letterSpacing: 0.25,\n        color: \"white\",\n    },\n    res: {\n        alignSelf: \"center\",\n        fontSize: 20,\n        lineHeight: 21,\n        fontWeight: \"bold\",\n        letterSpacing: 0.25,\n        color: \"black\",\n        marginTop: 20,\n    },\n});\n\nexport default Task2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}